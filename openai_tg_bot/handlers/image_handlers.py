from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, ContentType, InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.fsm.context import FSMContext

from ..states import ImageGenerationStates

image_router = Router()

@image_router.callback_query(F.data == "skip_images")
async def skip_images(callback: CallbackQuery, state: FSMContext):
    """–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –∑–∞–≥—Ä—É–∑–∫—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π"""
    await callback.answer()
    await state.set_state(ImageGenerationStates.waiting_for_prompt)
    await callback.message.edit_text(
        "‚úçÔ∏è –¢–µ–ø–µ—Ä—å –æ–ø–∏—à–∏—Ç–µ, –∫–∞–∫–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å.\n\n"
        "–ß–µ–º –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ, —Ç–µ–º –ª—É—á—à–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç!"
    )

@image_router.message(ImageGenerationStates.waiting_for_images, F.content_type == ContentType.PHOTO)
async def handle_photo(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ"""
    data = await state.get_data()
    images = data.get('images', [])
    
    photo = message.photo[-1]
    images.append(photo.file_id)
    
    await state.update_data(images=images)
    
    if len(images) >= 3:
        await state.set_state(ImageGenerationStates.waiting_for_prompt)
        await message.answer(
            f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(images)} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (–º–∞–∫—Å–∏–º—É–º).\n\n"
            "‚úçÔ∏è –¢–µ–ø–µ—Ä—å –æ–ø–∏—à–∏—Ç–µ, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å —Å —ç—Ç–∏–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏:"
        )
    else:
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(
                text=f"–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å {len(images)} —Ñ–æ—Ç–æ ‚û°Ô∏è", 
                callback_data="continue_to_prompt"
            )]
        ])
        await message.answer(
            f"üì∏ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(images)}/3 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.\n"
            "–ú–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ—â–µ –∏–ª–∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å:",
            reply_markup=keyboard
        )

@image_router.callback_query(F.data == "continue_to_prompt")
async def continue_to_prompt(callback: CallbackQuery, state: FSMContext):
    """–ü–µ—Ä–µ–π—Ç–∏ –∫ –≤–≤–æ–¥—É –ø—Ä–æ–º–ø—Ç–∞"""
    await callback.answer()
    await state.set_state(ImageGenerationStates.waiting_for_prompt)
    await callback.message.edit_text(
        "‚úçÔ∏è –û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –æ–ø–∏—à–∏—Ç–µ, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å —Å —ç—Ç–∏–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏:"
    )

@image_router.message(ImageGenerationStates.waiting_for_images)
async def wrong_content_images(message: Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–≤–µ—Ä–Ω–æ–≥–æ —Ç–∏–ø–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –ø—Ä–∏ –æ–∂–∏–¥–∞–Ω–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π"""
    await message.answer(
        "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å'"
    )